{
  // Rules
  // https://palantir.github.io/tslint/rules/

  "rules": {
    // TypeScript Specific
    // These rules find errors related to TypeScript features:

    "adjacent-overload-signatures": true,
    "ban-types": [true,
      ["Object", "Avoid using the `Object` type. Did you mean `object`?"],
      ["Function", "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."],
      ["Boolean", "Avoid using the `Boolean` type. Did you mean `boolean`?"],
      ["Number", "Avoid using the `Number` type. Did you mean `number`?"],
      ["String", "Avoid using the `String` type. Did you mean `string`?"],
      ["Symbol", "Avoid using the `Symbol` type. Did you mean `symbol`?"]
    ],
    "member-access": [true, "check-accessor", "check-constructor"],
    "member-ordering": [true, {"order": "statics-first"}],
    "no-any": true,
    "no-empty-interface": true,
    "no-import-side-effect": [true],
    "no-inferrable-types": [true, "ignore-params", "ignore-properties"],
    "no-internal-module": true,
    "no-magic-numbers": false,
    "no-namespace": [true, "allow-declarations"],
    "no-non-null-assertion": true,
    "no-reference": true,
    "no-var-requires": true,
    "only-arrow-functions": [true, "allow-declarations", "allow-named-functions"],
    "prefer-for-of": true,
    "promise-function-async": true, // This rule requires type info to run
    "typedef": [true,
      "call-signature",
      "parameter",
      "property-declaration",
      "member-variable-declaration"
    ],
    "typedef-whitespace": [true, {
      "call-signature": "nospace",
      "index-signature": "nospace",
      "parameter": "nospace",
      "property-declaration": "nospace",
      "variable-declaration": "nospace"
    }],
    "unified-signatures": true,

    // Functionality
    // These rules catch common errors in JS programming or otherwise confusing constructs that are prone to producing bugs:

    "await-promise": true, // This rule requires type info to run
    "ban": false,
    "curly": true,
    "forin": true,
    "import-blacklist": true,
    "label-position": true,
    "no-arg": true,
    "no-bitwise": true,
    "no-conditional-assignment": true,
    "no-console": [false],
    "no-construct": true,
    "no-debugger": true,
    "no-duplicate-super": true,
    "no-duplicate-variable": true,
    "no-empty": true,
    "no-eval": true,
    "no-floating-promises": [true], // This rule requires type info to run
    "no-for-in-array": true, // This rule requires type info to run
    "no-inferred-empty-object-type": true, // This rule requires type info to run
    "no-invalid-template-strings": true,
    "no-invalid-this": [true, "check-function-in-method"],
    "no-misused-new": true,
    "no-null-keyword": false,
    "no-shadowed-variable": true,
    "no-sparse-arrays": true,
    "no-string-literal": false,
    "no-string-throw": true,
    "no-switch-case-fall-through": true,
    "no-unbound-method": true, // This rule requires type info to run
    "no-unsafe-any": false, // This rule requires type info to run
    "no-unsafe-finally": true,
    "no-unused-expression": [true, "allow-fast-null-checks"],
    "no-unused-variable": [false],
    "no-use-before-declare": true,
    "no-var-keyword": true,
    "no-void-expression": [true, "ignore-arrow-function-shorthand"], // This rule requires type info to run
    "radix": true,
    "restrict-plus-operands": true, // This rule requires type info to run
    "strict-boolean-expressions": [false, "allow-null-union", "allow-undefined-union", "allow-string", "allow-number"], // This rule requires type info to run
    "strict-type-predicates": true, // This rule requires type info to run
    "switch-default": false,
    "triple-equals": [true, "allow-null-check"],
    "typeof-compare": true,
    "use-isnan": true,

    // Maintainability
    // These rules make code maintenance easier:

    "cyclomatic-complexity": [true],
    "eofline": true,
    "indent": [true, "spaces"],
    "linebreak-style": [true, "LF"],
    "max-classes-per-file": [false],
    "max-file-line-count": [false],
    "max-line-length": [true, 80],
    "no-default-export": true,
    "no-mergeable-namespace": true,
    "no-require-imports": false,
    "object-literal-sort-keys": false,
    "prefer-const": [true, {"destructuring": "any"}],
    "trailing-comma": [true, {"multiline": "never", "singleline": "never"}],

    // Style
    // These rules enforce consistent style across your codebase:

    "align": [true, "statements"],
    "array-type": [true, "array"],
    "arrow-parens": [true, "ban-single-arg-parens"],
    "arrow-return-shorthand": [true, "multiline"],
    "callable-types": true,
    "class-name": true,
    "comment-format": [true, "check-space"],
    "completed-docs": [false],
    "file-header": [false],
    "import-spacing": true,
    "interface-name": [true, "never-prefix"],
    "interface-over-type-literal": true,
    "jsdoc-format": true,
    "match-default-export-name": true, // This rule requires type info to run
    "newline-before-return": true,
    "new-parens": true,
    "no-angle-bracket-type-assertion": true,
    "no-boolean-literal-compare": true, // This rule requires type info to run
    "no-consecutive-blank-lines": [true],
    "no-parameter-properties": true,
    "no-reference-import": true,
    "no-trailing-whitespace": [true],
    "no-unnecessary-callback-wrapper": true,
    "no-unnecessary-initializer": true,
    "no-unnecessary-qualifier": true, // This rule requires type info to run
    "object-literal-key-quotes": [true, "consistent-as-needed"],
    "object-literal-shorthand": true,
    "one-line": [true,
      "check-catch",
      "check-finally",
      "check-else",
      "check-open-brace",
      "check-whitespace"
    ],
    "one-variable-per-declaration": [false],
    "ordered-imports": [true, {
      "import-sources-order": "lowercase-last",
      "named-imports-order": "lowercase-last"
    }],
    "prefer-function-over-method": [true, "allow-public", "allow-protected"],
    "prefer-method-signature": true,
    "prefer-template": [true, "allow-single-concat"],
    "quotemark": [true, "single", "avoid-escape", "jsx-double"],
    "return-undefined": false, // This rule requires type info to run
    "semicolon": [true, "always"],
    "space-before-function-paren": [true, {
      "anonymous": "always",
      "named": "never",
      "asyncArrow": "always",
      "method": "never",
      "constructor": "never"
    }],
    "variable-name": [true, "ban-keywords"],
    "whitespace": [true,
      "check-branch",
      "check-decl",
      "check-operator",
      "check-module",
      "check-separator",
      "check-type",
      "check-typecast",
      "check-preblock"
    ]
  }
}
